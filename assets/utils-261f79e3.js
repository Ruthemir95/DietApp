const r=r=>{if(!Array.isArray(r))return{calories:0,protein:0,carbs:0,fat:0};const e=r.reduce(((r,e)=>{if(e.alternative)return r;const a=e.nutrition||{calories:0,protein:0,carbs:0,fat:0};return{calories:r.calories+(Number(a.calories)||0),protein:r.protein+(Number(a.protein)||0),carbs:r.carbs+(Number(a.carbs)||0),fat:r.fat+(Number(a.fat)||0)}}),{calories:0,protein:0,carbs:0,fat:0});return{calories:Math.round(e.calories),protein:Number(e.protein.toFixed(1)),carbs:Number(e.carbs.toFixed(1)),fat:Number(e.fat.toFixed(1))}},e=r=>{if(!r)return{calories:0,protein:0,carbs:0,fat:0};const e={calories:0,protein:0,carbs:0,fat:0};return Object.values(r).forEach((r=>{Array.isArray(r)&&r.forEach((r=>{if(Array.isArray(r))return;const a=r.nutrition||{calories:0,protein:0,carbs:0,fat:0};e.calories+=Number(a.calories)||0,e.protein+=Number(a.protein)||0,e.carbs+=Number(a.carbs)||0,e.fat+=Number(a.fat)||0}))})),{calories:Math.round(e.calories),protein:Number(e.protein.toFixed(1)),carbs:Number(e.carbs.toFixed(1)),fat:Number(e.fat.toFixed(1))}};export{e as a,r as c};
